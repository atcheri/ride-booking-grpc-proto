// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.33.0
// source: driver/driver.proto

package driver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterDriverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverID      string                 `protobuf:"bytes,1,opt,name=driverID,proto3" json:"driverID,omitempty"`
	PackageSlug   string                 `protobuf:"bytes,2,opt,name=packageSlug,proto3" json:"packageSlug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDriverRequest) Reset() {
	*x = RegisterDriverRequest{}
	mi := &file_driver_driver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDriverRequest) ProtoMessage() {}

func (x *RegisterDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_driver_driver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDriverRequest.ProtoReflect.Descriptor instead.
func (*RegisterDriverRequest) Descriptor() ([]byte, []int) {
	return file_driver_driver_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterDriverRequest) GetDriverID() string {
	if x != nil {
		return x.DriverID
	}
	return ""
}

func (x *RegisterDriverRequest) GetPackageSlug() string {
	if x != nil {
		return x.PackageSlug
	}
	return ""
}

type RegisterDriverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Driver        *Driver                `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDriverResponse) Reset() {
	*x = RegisterDriverResponse{}
	mi := &file_driver_driver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDriverResponse) ProtoMessage() {}

func (x *RegisterDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_driver_driver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDriverResponse.ProtoReflect.Descriptor instead.
func (*RegisterDriverResponse) Descriptor() ([]byte, []int) {
	return file_driver_driver_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterDriverResponse) GetDriver() *Driver {
	if x != nil {
		return x.Driver
	}
	return nil
}

type Driver struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProfilePicture string                 `protobuf:"bytes,3,opt,name=profilePicture,proto3" json:"profilePicture,omitempty"`
	CarPlate       string                 `protobuf:"bytes,4,opt,name=carPlate,proto3" json:"carPlate,omitempty"`
	Geohash        string                 `protobuf:"bytes,5,opt,name=geohash,proto3" json:"geohash,omitempty"`
	PackageSlug    string                 `protobuf:"bytes,6,opt,name=packageSlug,proto3" json:"packageSlug,omitempty"`
	Location       *Location              `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Driver) Reset() {
	*x = Driver{}
	mi := &file_driver_driver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Driver) ProtoMessage() {}

func (x *Driver) ProtoReflect() protoreflect.Message {
	mi := &file_driver_driver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Driver.ProtoReflect.Descriptor instead.
func (*Driver) Descriptor() ([]byte, []int) {
	return file_driver_driver_proto_rawDescGZIP(), []int{2}
}

func (x *Driver) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Driver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Driver) GetProfilePicture() string {
	if x != nil {
		return x.ProfilePicture
	}
	return ""
}

func (x *Driver) GetCarPlate() string {
	if x != nil {
		return x.CarPlate
	}
	return ""
}

func (x *Driver) GetGeohash() string {
	if x != nil {
		return x.Geohash
	}
	return ""
}

func (x *Driver) GetPackageSlug() string {
	if x != nil {
		return x.PackageSlug
	}
	return ""
}

func (x *Driver) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type Location struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_driver_driver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_driver_driver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_driver_driver_proto_rawDescGZIP(), []int{3}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

var File_driver_driver_proto protoreflect.FileDescriptor

const file_driver_driver_proto_rawDesc = "" +
	"\n" +
	"\x13driver/driver.proto\"U\n" +
	"\x15RegisterDriverRequest\x12\x1a\n" +
	"\bdriverID\x18\x01 \x01(\tR\bdriverID\x12 \n" +
	"\vpackageSlug\x18\x02 \x01(\tR\vpackageSlug\"9\n" +
	"\x16RegisterDriverResponse\x12\x1f\n" +
	"\x06driver\x18\x01 \x01(\v2\a.DriverR\x06driver\"\xd3\x01\n" +
	"\x06Driver\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12&\n" +
	"\x0eprofilePicture\x18\x03 \x01(\tR\x0eprofilePicture\x12\x1a\n" +
	"\bcarPlate\x18\x04 \x01(\tR\bcarPlate\x12\x18\n" +
	"\ageohash\x18\x05 \x01(\tR\ageohash\x12 \n" +
	"\vpackageSlug\x18\x06 \x01(\tR\vpackageSlug\x12%\n" +
	"\blocation\x18\a \x01(\v2\t.LocationR\blocation\"D\n" +
	"\bLocation\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude2\x97\x01\n" +
	"\rDriverService\x12A\n" +
	"\x0eRegisterDriver\x12\x16.RegisterDriverRequest\x1a\x17.RegisterDriverResponse\x12C\n" +
	"\x10UnregisterDriver\x12\x16.RegisterDriverRequest\x1a\x17.RegisterDriverResponseB:Z8github.com/atcheri/ride-booking-grpc-proto/driver;driverb\x06proto3"

var (
	file_driver_driver_proto_rawDescOnce sync.Once
	file_driver_driver_proto_rawDescData []byte
)

func file_driver_driver_proto_rawDescGZIP() []byte {
	file_driver_driver_proto_rawDescOnce.Do(func() {
		file_driver_driver_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_driver_driver_proto_rawDesc), len(file_driver_driver_proto_rawDesc)))
	})
	return file_driver_driver_proto_rawDescData
}

var file_driver_driver_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_driver_driver_proto_goTypes = []any{
	(*RegisterDriverRequest)(nil),  // 0: RegisterDriverRequest
	(*RegisterDriverResponse)(nil), // 1: RegisterDriverResponse
	(*Driver)(nil),                 // 2: Driver
	(*Location)(nil),               // 3: Location
}
var file_driver_driver_proto_depIdxs = []int32{
	2, // 0: RegisterDriverResponse.driver:type_name -> Driver
	3, // 1: Driver.location:type_name -> Location
	0, // 2: DriverService.RegisterDriver:input_type -> RegisterDriverRequest
	0, // 3: DriverService.UnregisterDriver:input_type -> RegisterDriverRequest
	1, // 4: DriverService.RegisterDriver:output_type -> RegisterDriverResponse
	1, // 5: DriverService.UnregisterDriver:output_type -> RegisterDriverResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_driver_driver_proto_init() }
func file_driver_driver_proto_init() {
	if File_driver_driver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_driver_driver_proto_rawDesc), len(file_driver_driver_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_driver_driver_proto_goTypes,
		DependencyIndexes: file_driver_driver_proto_depIdxs,
		MessageInfos:      file_driver_driver_proto_msgTypes,
	}.Build()
	File_driver_driver_proto = out.File
	file_driver_driver_proto_goTypes = nil
	file_driver_driver_proto_depIdxs = nil
}
